{"version":3,"sources":["selectors/flags.js","App.js","query-configs/flags.js","store.js","index.js"],"names":["getFlags","state","entities","flags","App","React","useState","selectedFlags","setSelectedFlags","useSelector","flagsSelectors","flagsSum","setFlagsSum","all","setAll","reverse","setReverse","useRequest","url","transform","body","update","prev","next","useEffect","s","decode","parseFloat","length","alert","clones","response","list","map","flag","selected","forEach","value","Fragment","className","style","width","el","i","type","id","checked","onChange","e","target","htmlFor","name","onClick","prompt","sum","selectedValues","JSON","parse","stringify","push","indexOf","reducer","combineReducers","entitiesReducer","queries","queriesReducer","store","createStore","applyMiddleware","queryMiddleware","superagentInterface","getQueries","ReactDOM","render","StrictMode","queriesSelector","document","getElementById"],"mappings":"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","file":"static/js/main.3d2282b3.chunk.js","sourcesContent":["export const getFlags = state => state.entities.flags;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useRequest } from 'redux-query-react';\nimport * as flagsQueryConfigs from './query-configs/flags';\nimport * as flagsSelectors from './selectors/flags';\n\nconst App = () => {\n  const [selectedFlags,setSelectedFlags] = React.useState([]);\n  const flags = useSelector(flagsSelectors.getFlags);\n  const [flagsSum,setFlagsSum] = React.useState(0);\n  const [all,setAll] = React.useState(true);\n  const [reverse,setReverse] = React.useState(null);\n\n  useRequest(flagsQueryConfigs.flagsRequest());\n\n  React.useEffect(()=>{\n    //-1433139886\n    //948700664\n    if(reverse){\n      let s = decode(selectedFlags,parseFloat(reverse));\n      if(s.length)\n        setSelectedFlags(s);\n      else\n        alert('You entered invalid flag sum. It contains values not in the session flag list. Could not decode it sorry.');\n\n      setReverse(null);\n    }\n  // eslint-disable-next-line\n  },[reverse])\n\n  React.useEffect(()=>{\n    if(flags){\n      let clones = flags.response.list.map((flag)=>{\n        return ({\n          ...flag,\n          selected: false\n        })\n      });\n      setSelectedFlags(clones);\n    }\n  },[flags]);\n\n  React.useEffect(()=>{\n    if(selectedFlags){\n      let flagsSum = 0;\n      selectedFlags.forEach((flag)=>{\n        if(flag.selected)\n          flagsSum = flagsSum + flag.value\n      });\n      setFlagsSum(flagsSum);\n    }\n  },[selectedFlags])\n\n  if(flags)\n\n\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h1>Session flags: {flagsSum}</h1>\n              <table>\n                <thead>\n                <tr>\n                  <th style={{width:'250px'}}>Flag</th>\n                  <th>Value</th>\n                </tr>\n                </thead>\n                <tbody>\n                {selectedFlags.map((el,i)=>\n                  <tr className={`${(i%2 === 0 ? 'even':'odd')}`} key={`table-row-${i}`}>\n                    <td>\n                        <input type=\"checkbox\" className=\"form-check-input\" id={`check-${i}`} checked={el.selected}\n                          onChange={(e)=>{\n                            setSelectedFlags(selectedFlags.map((flag)=> {\n                              if (flag.value===el.value)\n                                return ({ ...flag, selected: e.target.checked })\n                              else \n                                return flag;\n                            }));\n                          }}\n                        />\n                        <label className=\"form-check-label\" htmlFor={`check-${i}`}>{el.name}</label>\n                    </td>\n                    <td className=\"\">{el.value}</td>\n                  </tr>\n                )}\n                </tbody>\n              </table>\n              <button \n                onClick={()=>{\n                  setSelectedFlags(selectedFlags.map((flag)=> {\n                      return ({ ...flag, selected: all })\n                  }));\n                  setAll(!all);\n                }}\n              >\n                All toggle\n              </button>\n\n              <button\n                onClick={()=>{\n                  setReverse(prompt('Enter sum of flags for decoding.'));\n                }}\n              >Reverse sum</button>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  return <p>Loading data</p>;\n}\nexport default App;\n\n\nconst decode = (flags,sum) => {\n  if(flags.length){\n    let selectedValues = [];\n    let decodeFlags = JSON.parse(JSON.stringify(flags)).reverse(); // Make sure its ordered\n    decodeFlags.forEach((flag,i)=>{\n      // For positive values\n      if(flag.value > 0){\n        // console.log((sum - flag.value))\n        if(sum - flag.value >= 0 && sum !== 0){\n          selectedValues.push(flag.value);\n          sum = sum - flag.value;\n        }\n      }\n      // For negative values \n      else {\n          if(sum < 0){\n          selectedValues.push(flag.value);\n          sum = sum - flag.value;\n        }\n      }\n    });\n    if(sum===0)\n      return flags.map((flag)=> {\n        return ({ ...flag, selected: selectedValues.indexOf(flag.value)!==-1 })\n      });\n    else \n      return [] \n  }\n};","export const flagsRequest = () => {\n    return {\n      url: `https://api.trollsimracing.no:8080/availableflags`,\n      transform: body => ({\n        flags: body,\n      }),\n      update: {\n        flags: (prev, next) => {\n          return next;\n        },\n      },\n    };\n  }","import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport { entitiesReducer, queriesReducer, queryMiddleware } from 'redux-query';\nimport superagentInterface from 'redux-query-interface-superagent';\n\nexport const getQueries = state => state.queries;\nexport const getEntities = state => state.entities;\n\nconst reducer = combineReducers({\n  entities: entitiesReducer,\n  queries: queriesReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(queryMiddleware(superagentInterface, getQueries, getEntities)),\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Provider as ReduxQueryProvider } from 'redux-query-react';\nimport App from './App';\nimport store from './store';\n\nimport './index.css';\n\nexport const getQueries = state => state.queries;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReduxQueryProvider queriesSelector={getQueries}>\n        <App />\n      </ReduxQueryProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// const webp = e => document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp') === 0;\n\n// if(!webp())\n//   document.body.classList.add('no-webp');"],"sourceRoot":""}